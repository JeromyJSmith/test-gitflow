# Name: Unit Test
# Description: Runs unit tests on the codebase. This workflow is triggered when a PR is opened or updated. It will run the unit tests on the base Python version (3.9) if any Python code has changed. If no Python code has changed, the workflow will exit early.

name: Unit Test

on:
  pull_request:
    branches:
      - develop
      - main
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
# Check for changes to Python code
  python-changes:
    name: Check for changes to Python code
    runs-on: ubuntu-latest
    outputs:
      python-changes: ${{ steps.python-changes.outputs.python-changes }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check for changes to Python code
        id: python-changes
        run: |
          if git diff --name-only $SOURCE_BRANCH $TARGET_BRANCH | grep -qE '.*\.py$'; then
            echo "python-changes=true" >> $GITHUB_OUTPUT
          else
            echo "python-changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Show Output result for python-changes
        run: echo "python-changes=${{ steps.python-changes.outputs.python-changes }}"

# Run tests on base Python version if Python code has changed
  base-test:
    name: Base Tests - Ubuntu-latest - Python 3.9
    needs: python-changes
    runs-on: ubuntu-latest
    if: ${{ needs.python-changes.outputs.python-changes }} == 'true'
    steps:
      - name: Show Output result for python-changes
        run: echo "python-changes=${{ needs.python-changes.outputs.python-changes }}"

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          architecture: x64

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-v1-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction -E optimization

      - name: Run tests
        env:
          MPLBACKEND: Agg
        run: |
          source $VENV
          pytest tests/ --optimization

      - name: Start Terminal and exit
        run: |
          source $VENV
          python terminal.py